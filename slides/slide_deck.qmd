---
title: "Authoring collaborative research projects using Quarto"
author: "Quinn Asena"
institute: "UW-Madison"
date: today
bibliography: refs.bib
from: markdown+emoji
format:
  revealjs:
    theme: dark
#    backgroundcolor: "#44444c"
#    fontcolor: "white"
    preview-links: true
    highlight-style: github
    slide-number: c/t
    width: 1600
    height: 900
title-slide-attributes:
  data-background-color: "#36365a"
---

# Quarto for collaborative research

## why geek out on Quarto?

- [This is why!](https://quinnasena.github.io/resbaz2022/template_complete.html)

- [and this](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/)

- [But is it taking over?](https://yihui.org/en/2022/04/quarto-r-markdown/)

## why I like Quarto

- [Well documented](https://quarto.org/docs/guide/)

- Uses [markdown syntax](https://quarto.org/docs/authoring/markdown-basics.html)

- Accepts multiple programming languages

- Outputs multiple formats (Word, PDF HTML...)

- Easy to learn and transfer skills from other languages


## another thing to learn?
::::{.columns}
:::{.column width="40%"}
- R Markdown and Jupyter also support multiple languages too...

- You decide ʕ•́ᴥ•̀ʔっ
:::

:::{.column width="60%"}
![XKCD nails it again!](./images/standards_2x.png)
:::
::::

## why collaborate via Quarto and Git?

- Version control your projects

- reproducibility: whole workflow from data to results in one place

- Host a live link consistent with current results (no more copy paste 7 plots into a word doc each time you change something!)

- Coding colaborators can contribute via a Git workflow

- Communicate results to non-coding collaborators

# Buckle up, ready your coding fingers!

## Today's goals

- Publish an example link on GitHub

- Have a working template you can use in the future

- Pointers to handy resources in the slides

## Zoom

- Camera optional, but we love to see you (really, it helps me a lot!)

- During exercises give me a :heavy_check_mark: when you are done or a :hand: if you need help

- Drop questions in the Zoom chat or raise a hand at any time

- We support inclusivity and a positive environment through the Code of Conduct

## First things first

- Open up VS Code and navigate to the source control
  - Clone the repo: https://github.com/QuinnAsena/resbaz2022.git

- Publish repo to your own GitHub account

- Open up the template.qmd file

:::{.callout-note}
We are using VS Code, R, and GitHub. If you have a preferred workflow like RStudio, Python, or GitKraken you can use them but may be harder to follow the session content. Afterall, Quarto is supposed to be flexible!
:::

## Elements of a Quarto file

:::{.incremental}
- YAML

- Text

- Code blocks

- References file

- scss (optional for style; won't cover this!)
:::

## YAML

Your Turn :computer: :

::::{.columns}
:::{.column width="50%"}
The YAML is a set of `key: value pairs` that are the metadata for your document, such as, author, title, output format, and citation file.

- YAML is whitespace sensitive

- Indent sensitive?

:::

:::{.column width="50%"}
``` yaml
---
title: "My Manuscript"
format: html
date: today
---
```
:::
::::

## YAML

:::{.callout-tip}
# YAML Exersice
- Open up the template.qmd and fill the `title: "Your title"` and `author: "You et al"` fields

  - A couple of handy entries are already completed

  - The existing field: `date: today` will generate today's date (cool huh?  ͡▀̿ ̿ ͜ʖ ͡▀̿ ̿ )


- Add a table of contents following the [guide](https://quarto.org/docs/output-formats/html-basics.html)

- Give me a :heavy_check_mark: when done or a :hand: if you need help

:::

## Text

- Writing in Quarto uses [markdown syntax](https://quarto.org/docs/authoring/markdown-basics.html) 

- LaTeX is used to render PDFs so LaTeX commands can be used for PDF outputs

- Look! I can do fancy maths: $f_{c}=z^{2}+c$  ͡▀̿ ̿ ͜ʖ ͡▀̿ ̿ 

:::{.callout-note}
# Pro tip!
Render regularly. Small errors can be tricky to pick out long after they have been made.
:::

## Citations

Citations require:

- a `.bib` or `.bibtex` file in your working directory (one is included for today)

  - The references file can be generated (and automatically sync) with Zotero and other reference managers.

- a YAML entry pointing to the file `bibliography: refs.bib` (if the file is named 'refs.bib')

- an optional `CSL` file specifying the format of the bibliography.

  - Useful for authoring articles as `CSL` files are [downloadable for specific journals](https://github.com/citation-style-language/styles)

## Citations

Citing work in-text [follows the `@citekey` format](https://quarto.org/docs/authoring/footnotes-and-citations.html#sec-citations)

- `@perkel2022` = @perkel2022

- `[@chamberlin1897; @perkel2022]` = [@chamberlin1897; @perkel2022]

We won't go deeper into citations for now as we are not authoring an article today. The link above has info for authoring.

## Markdown exercise

:::{.callout-tip}
# Markdown Exersice

The template has some basic.....

:::

## Code blocks

Code blocks are inserted like this:
```{r}
#| echo: fenced
#| eval: false
6*7
```

Or:

```{python}
#| echo: fenced
#| eval: false
2*21
```

## Tabsets {.scrollable}

::: panel-tabset
# Code
```{r tabsetPlot}
#| echo: true

library(palmerpenguins)
library(ggplot2)
# From: https://allisonhorst.github.io/palmerpenguins/articles/examples.html
mass_flipper <- ggplot(data = penguins,
                       aes(x = flipper_length_mm,
                           y = body_mass_g)) +
  geom_point(aes(color = species,
                 shape = species),
             size = 3,
             alpha = 0.8) +
  scale_color_manual(values = c("darkorange","purple","cyan4")) +
  labs(x = "Flipper length (mm)",
       y = "Body mass (g)",
       color = "Penguin species",
       shape = "Penguin species") +
  theme_minimal() +
  theme(legend.position = c(0.2, 0.7),
        plot.title.position = "plot",
)
```

# Data
```{r}
rmarkdown::paged_table(penguins[1:50,])
```

# Plot
```{r}
#| warning: false
#| fig-cap: Flipper length and body mass for Adelie, Chinstrap and Gentoo Penguins
#| fig-alt: Plot of penguin bill length against body mass by species

mass_flipper
```
:::

## Tabset code

tabsets are input using:

```quarto
::: panel-tabset
# Tab 1

# Tab 2

:::

```


## Images

## A slide with a plot {.scrollable}

```{r}
#| echo: true
#| fig.retina: 2
#| fig.height: 9
#| fig.width: 16
#| output-location: column
# ^^ could be fragment, slide, column, column-fragment
ggplot() +
  geom_point(
    data = mtcars,
    aes(wt, mpg),
    color = "goldenrod"
  ) +
  labs(
    title = "Some Dots"
  ) 
```

## Python

```{.python code-line-numbers="6-8"}
import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

## Other

- .scss (optional for style)


## References

[Biostats](https://biostats-r.github.io/biostats/quarto/) - very useful resource for authoring documents in Quarto. This session draws from their content.